version: '3.8'

services:
  ms-backend:
    build:
      context: ./
    container_name: ms-backend
    ports:
      - "8088:8088"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/cdr_backend_db?allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: backend_user
      SPRING_DATASOURCE_PASSWORD: backend_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://localhost:8081/realms/cdr-platform
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://localhost:8081/realms/cdr-platform
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_ID: ms-backend
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET: BHZg91EL04cQYs6Ianz3naBQTrszK3cB
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cdr-network
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
      keycloak:
        condition: service_started

  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_DATABASE: cdr_backend_db
      MYSQL_USER: backend_user
      MYSQL_PASSWORD: backend_pass
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "3306:3306"
    networks:
      - cdr-network
    volumes:
      - mysql_data:/var/lib/mysql

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:29092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - "29092:29092"
    networks:
      - cdr-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:29092 --list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    container_name: keycloak
    command: 
      - start-dev
      - --import-realm
    environment:
      KC_DB: dev-file
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8081
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cdr-network
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/realms:/opt/keycloak/data/import

networks:
  cdr-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  keycloak_data:
    driver: local
